trigger:
  branches:
    include:
      - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '22.x'
  functionAppName: 'eqs-dba-calc-server-dev'  
  azureServiceConnection: 'backend-service-connection'
  functionAppPath: 'src/functionApps/eqs-dba-benefit-calculate'  #  path 

stages:
- stage: Build
  displayName: 'Build Node.js Function App'
  jobs:
  - job: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'

    - script: |
        cd $(functionAppPath)
        npm install
        npm run build
      displayName: 'Install dependencies and build'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(functionAppPath)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy to Azure Function App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              downloadPath: '$(Pipeline.Workspace)'

          - task: AzureFunctionApp@2
            inputs:
              connectedServiceNameARM: '$(azureServiceConnection)'
              appType: 'functionAppLinux'
              isFlexConsumption: true
              appName: '$(functionAppName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'


# trigger:
#   branches:
#     include:
#       - main

# pool:
#   vmImage: 'ubuntu-latest'

# variables:
#   nodeVersion: '22.x'
#   functionAppName: 'eqs-dba-calc-server-dev'
#   azureServiceConnection: 'backend-service-connection'

# stages:
# - stage: Build
#   displayName: 'Build Node.js Function App'
#   jobs:
#   - job: Build
#     steps:
#     - task: NodeTool@0
#       inputs:
#         versionSpec: '$(nodeVersion)'
#       displayName: 'Install Node.js'

#     - script: |
#         npm install
#         npm run build
#       displayName: 'Install dependencies and build'

#     - task: ArchiveFiles@2
#       inputs:
#         rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
#         includeRootFolder: false
#         archiveType: 'zip'
#         archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#         replaceExistingArchive: true

#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
#         ArtifactName: 'drop'
#         publishLocation: 'Container'     

# - stage: Deploy
#   displayName: 'Deploy to Azure Function App'
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     environment: be-dev
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: DownloadBuildArtifacts@1
#             inputs:
#               buildType: 'current'
#               artifactName: 'drop'
#               downloadPath: '$(Pipeline.Workspace)'

#           - task: AzureFunctionApp@2
#             inputs:
#               connectedServiceNameARM: '$(azureServiceConnection)'
#               appType: 'functionAppLinux'
#               isFlexConsumption: true
#               appName: '$(functionAppName)'
#               package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'